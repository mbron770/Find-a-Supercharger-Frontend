{"ast":null,"code":"var _jsxFileName = \"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/search.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search(_ref) {\n  _s();\n  let {\n    currentLocation,\n    setLat,\n    setLng,\n    address,\n    setAddress\n  } = _ref;\n  useEffect(() => {\n    if (currentLocation) {\n      setLat(currentLocation.lat);\n      setLng(currentLocation.lng);\n    }\n  }, [currentLocation]);\n  const handleAddressSelect = async selectedAddress => {\n    setAddress(selectedAddress);\n    try {\n      const results = await geocodeByAddress(selectedAddress);\n      const selectedLocation = await getLatLng(results[0]);\n      const {\n        lat,\n        lng\n      } = selectedLocation;\n      console.log(`Latitude: ${lat}, Longitude: ${lng}`);\n      setLat(lat);\n      setLng(lng);\n      const addressArr = selectedAddress.split(\", \");\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  };\n  function handleAddressChange(selectedAddress) {\n    //console.log(address,\"   parent\")\n    if (address.length === 1) {\n      //console.log (\"DONE\")\n      setLat(currentLocation.lat);\n      setLng(currentLocation.lng);\n    }\n    setAddress(prevAddr => selectedAddress);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"addressCityStateZip\",\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n          value: address,\n          onChange: handleAddressChange,\n          onSelect: handleAddressSelect,\n          children: _ref2 => {\n            let {\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                ...getInputProps({\n                  placeholder: \"Address\",\n                  size: \"sm\"\n                }),\n                style: {\n                  width: \"50%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 31\n                }, this), suggestions.map(suggestion => {\n                  const style = {\n                    backgroundColor: suggestion.active ? \"#e2e2e2\" : \"#fff\"\n                  };\n                  return /*#__PURE__*/_createElement(\"div\", {\n                    ...getSuggestionItemProps(suggestion, {\n                      style\n                    }),\n                    key: suggestion.placeId,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 23\n                    }\n                  }, suggestion.description);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Search, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","useEffect","PlacesAutocomplete","geocodeByAddress","getLatLng","Form","Button","jsxDEV","_jsxDEV","createElement","_createElement","Fragment","_Fragment","Search","_ref","_s","currentLocation","setLat","setLng","address","setAddress","lat","lng","handleAddressSelect","selectedAddress","results","selectedLocation","console","log","addressArr","split","error","handleAddressChange","length","prevAddr","children","style","display","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","position","top","left","transform","value","onChange","onSelect","_ref2","getInputProps","suggestions","getSuggestionItemProps","loading","Control","placeholder","size","width","map","suggestion","backgroundColor","active","key","placeId","__self","__source","description","_c","$RefreshReg$"],"sources":["/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/search.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function Search({\n  currentLocation,\n  setLat,\n  setLng,\n  address,\n  setAddress,\n}) {\n  useEffect(() => {\n    if (currentLocation) {\n      setLat(currentLocation.lat);\n      setLng(currentLocation.lng);\n    }\n  }, [currentLocation]);\n\n  const handleAddressSelect = async (selectedAddress) => {\n    setAddress(selectedAddress);\n\n    try {\n      const results = await geocodeByAddress(selectedAddress);\n      const selectedLocation = await getLatLng(results[0]);\n      const { lat, lng } = selectedLocation;\n      console.log(`Latitude: ${lat}, Longitude: ${lng}`);\n      setLat(lat);\n      setLng(lng);\n      const addressArr = selectedAddress.split(\", \");\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  };\n\n  function handleAddressChange(selectedAddress) {\n    //console.log(address,\"   parent\")\n    if (address.length === 1) {\n      //console.log (\"DONE\")\n      setLat(currentLocation.lat);\n      setLng(currentLocation.lng);\n    }\n    setAddress((prevAddr) => selectedAddress);\n  }\n\n  return (\n    <>\n\n<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n\n\n  </div>\n      <Form.Group controlId=\"addressCityStateZip\" \n      style={{ position: 'fixed', top: '50%', \n      left: '50%', transform: 'translate(-50%, -50%)' }}\n      \n      >\n        \n        <div>\n          <PlacesAutocomplete \n            value={address}\n            onChange={handleAddressChange}\n            onSelect={handleAddressSelect}\n          >\n            {({\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading,\n            }) => (\n              <div>\n                <Form.Control\n                  {...getInputProps({\n                    placeholder: \"Address\",\n                    size: \"sm\",\n                  })}\n                  style={{ width: \"50%\" }}\n                />\n                <div>\n                  {loading && <div>Loading...</div>}\n                  {suggestions.map((suggestion) => {\n                    const style = {\n                      backgroundColor: suggestion.active ? \"#e2e2e2\" : \"#fff\",\n                    };\n                    return (\n                      <div\n                        {...getSuggestionItemProps(suggestion, { style })}\n                        key={suggestion.placeId}\n                      >\n                        {suggestion.description}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </PlacesAutocomplete>\n        </div>\n      </Form.Group>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}