{"ast":null,"code":"var _jsxFileName = \"/Users/tabo/Development/code/phase-2/phase-2-Project/Find-a-Supercharger-Frontend/src/components/Carddisplay.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'http://localhost:3000/fuel_stations';\nfunction CardDisplay(_ref) {\n  let {\n    stations,\n    currentLocation,\n    isLocationLoaded,\n    setStations\n  } = _ref;\n  const calculateDistances = () => {\n    const yourLatitude = currentLocation.lat;\n    const yourLongitude = currentLocation.lng;\n    const updatedStations = stations.map(station => {\n      const stationLatitude = station.latitude;\n      const stationLongitude = station.longitude;\n      const distance = calculateDistance(yourLatitude, yourLongitude, stationLatitude, stationLongitude);\n      return {\n        ...station,\n        distance: distance\n      };\n    });\n    updatedStations.sort((a, b) => a.distance - b.distance);\n    setStations(updatedStations);\n  };\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 3959; // Radius of the Earth in miles\n    const dLat = deg2rad(lat2 - lat1);\n    const dLon = deg2rad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in miles\n    return distance;\n  };\n  const deg2rad = deg => {\n    return deg * (Math.PI / 180);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: stations.map(station => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Station: \", station.station_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), station.distance && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Distance: \", station.distance.toFixed(2), \" miles\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 32\n      }, this)]\n    }, uuidv4(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_c = CardDisplay;\n;\nexport default CardDisplay;\nvar _c;\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"names":["React","useEffect","useState","v4","uuidv4","jsxDEV","_jsxDEV","URL","CardDisplay","_ref","stations","currentLocation","isLocationLoaded","setStations","calculateDistances","yourLatitude","lat","yourLongitude","lng","updatedStations","map","station","stationLatitude","latitude","stationLongitude","longitude","distance","calculateDistance","sort","a","b","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","Math","sin","cos","c","atan2","sqrt","deg","PI","children","station_name","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["/Users/tabo/Development/code/phase-2/phase-2-Project/Find-a-Supercharger-Frontend/src/components/Carddisplay.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst URL = 'http://localhost:3000/fuel_stations';\nfunction CardDisplay({stations,currentLocation,isLocationLoaded,setStations}) {\n\n  const calculateDistances = () => {\n    const yourLatitude = currentLocation.lat;\n    const yourLongitude = currentLocation.lng;\n\n    const updatedStations = stations.map(station => {\n      const stationLatitude = station.latitude;\n      const stationLongitude = station.longitude;\n\n      const distance = calculateDistance(\n        yourLatitude,\n        yourLongitude,\n        stationLatitude,\n        stationLongitude\n      );\n\n      return {\n        ...station,\n        distance: distance\n      };\n    });\n\n    updatedStations.sort((a, b) => a.distance - b.distance);\n    setStations(updatedStations);\n  };\n\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 3959; // Radius of the Earth in miles\n    const dLat = deg2rad(lat2 - lat1);\n    const dLon = deg2rad(lon2 - lon1);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in miles\n    return distance;\n  };\n\n  const deg2rad = deg => {\n    return deg * (Math.PI / 180);\n  };\n\n  return (\n    <div>\n      {stations.map(station => (\n        <div key={uuidv4()}>\n          <p>Station: {station.station_name}</p>\n          {station.distance && <p>Distance: {station.distance.toFixed(2)} miles</p>}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CardDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}