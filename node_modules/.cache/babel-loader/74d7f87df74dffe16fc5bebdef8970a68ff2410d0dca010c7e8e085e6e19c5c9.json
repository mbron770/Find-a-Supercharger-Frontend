{"ast":null,"code":"var _jsxFileName = \"/Users/tabo/Development/code/phase-2/phase-2-Project/Find-a-Supercharger-Frontend/src/components/search.jsx\";\nimport { useState } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"addressCityStateZip\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n          value: address,\n          onChange: handleAddressChange,\n          onSelect: handleAddressSelect,\n          children: _ref => {\n            let {\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                ...getInputProps({\n                  placeholder: 'Address',\n                  size: 'sm'\n                }),\n                style: {\n                  width: '50%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 35\n                }, this), suggestions.map(suggestion => {\n                  const style = {\n                    backgroundColor: suggestion.active ? '#e2e2e2' : '#fff'\n                  };\n                  return /*#__PURE__*/_createElement(\"div\", {\n                    ...getSuggestionItemProps(suggestion, {\n                      style\n                    }),\n                    key: suggestion.placeId,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 31,\n                      columnNumber: 27\n                    }\n                  }, suggestion.description);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 19\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","PlacesAutocomplete","geocodeByAddress","getLatLng","jsxDEV","_jsxDEV","createElement","_createElement","Fragment","_Fragment","Search","children","Form","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","value","address","onChange","handleAddressChange","onSelect","handleAddressSelect","_ref","getInputProps","suggestions","getSuggestionItemProps","loading","Control","placeholder","size","style","width","map","suggestion","backgroundColor","active","key","placeId","__self","__source","description","_c","$RefreshReg$"],"sources":["/Users/tabo/Development/code/phase-2/phase-2-Project/Find-a-Supercharger-Frontend/src/components/search.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nexport default function Search() {\n    return (\n      <>\n      <Form.Group controlId=\"addressCityStateZip\">\n          <Form.Label>Address</Form.Label>\n          <div>\n              <PlacesAutocomplete\n                  value={address}\n                  onChange={handleAddressChange}\n                  onSelect={handleAddressSelect}\n              >\n                  {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                  <div>\n                      <Form.Control\n                      {...getInputProps({\n                          placeholder: 'Address',\n                          size: 'sm',\n                      })}\n                      style={{ width: '50%' }}\n                      />\n                      <div>\n                      {loading && <div>Loading...</div>}\n                      {suggestions.map((suggestion) => {\n                          const style = {\n                          backgroundColor: suggestion.active ? '#e2e2e2' : '#fff',\n                          };\n                          return (\n                          <div\n                              {...getSuggestionItemProps(suggestion, { style })}\n                              key={suggestion.placeId}\n                          >\n                              {suggestion.description}\n                          </div>\n                          );\n                      })}\n                      </div>\n                  </div>\n                  )}\n              </PlacesAutocomplete>\n\n          </div>\n      </Form.Group>\n      </>\n    );\n  }"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,kBAAkB,IAAIC,gBAAgB,EAAEC,SAAS,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,aAAA,IAAAC,cAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5F,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC7B,oBACEL,OAAA,CAAAI,SAAA;IAAAE,QAAA,eACAN,OAAA,CAACO,IAAI,CAACC,KAAK;MAACC,SAAS,EAAC,qBAAqB;MAAAH,QAAA,gBACvCN,OAAA,CAACO,IAAI,CAACG,KAAK;QAAAJ,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAChCd,OAAA;QAAAM,QAAA,eACIN,OAAA,CAACJ,kBAAkB;UACfmB,KAAK,EAAEC,OAAQ;UACfC,QAAQ,EAAEC,mBAAoB;UAC9BC,QAAQ,EAAEC,mBAAoB;UAAAd,QAAA,EAE7Be,IAAA;YAAA,IAAC;cAAEC,aAAa;cAAEC,WAAW;cAAEC,sBAAsB;cAAEC;YAAQ,CAAC,GAAAJ,IAAA;YAAA,oBACjErB,OAAA;cAAAM,QAAA,gBACIN,OAAA,CAACO,IAAI,CAACmB,OAAO;gBAAA,GACTJ,aAAa,CAAC;kBACdK,WAAW,EAAE,SAAS;kBACtBC,IAAI,EAAE;gBACV,CAAC,CAAC;gBACFC,KAAK,EAAE;kBAAEC,KAAK,EAAE;gBAAM;cAAE;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvB,CAAC,eACFd,OAAA;gBAAAM,QAAA,GACCmB,OAAO,iBAAIzB,OAAA;kBAAAM,QAAA,EAAK;gBAAU;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,EAChCS,WAAW,CAACQ,GAAG,CAAEC,UAAU,IAAK;kBAC7B,MAAMH,KAAK,GAAG;oBACdI,eAAe,EAAED,UAAU,CAACE,MAAM,GAAG,SAAS,GAAG;kBACjD,CAAC;kBACD,oBACAhC,cAAA;oBAAA,GACQsB,sBAAsB,CAACQ,UAAU,EAAE;sBAAEH;oBAAM,CAAC,CAAC;oBACjDM,GAAG,EAAEH,UAAU,CAACI,OAAQ;oBAAAC,MAAA;oBAAAC,QAAA;sBAAA3B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA;kBAAA,GAEvBkB,UAAU,CAACO,WACX,CAAC;gBAEV,CAAC,CAAC;cAAA;gBAAA5B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;QACL;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACe;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACX,CAAC;AAEP;AAAC0B,EAAA,GA5CqBnC,MAAM;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}