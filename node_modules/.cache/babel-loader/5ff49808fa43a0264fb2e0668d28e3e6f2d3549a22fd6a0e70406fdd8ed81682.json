{"ast":null,"code":"var _jsxFileName = \"/Users/tabo/Development/code/phase-2/phase-2-Project/Find-a-Supercharger-Frontend/src/components/search.jsx\";\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search(_ref) {\n  let {\n    handleAddressChange,\n    handleAddressSelect,\n    address\n  } = _ref;\n  console.log(address);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"addressCityStateZip\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n          value: address,\n          onChange: handleAddressChange,\n          onSelect: handleAddressSelect,\n          searchOptions: {\n            types: ['address'],\n            componentRestrictions: {\n              country: 'us'\n            }\n          },\n          children: _ref2 => {\n            let {\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                ...getInputProps({\n                  placeholder: 'Address',\n                  size: 'sm'\n                }),\n                style: {\n                  width: '50%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 31\n                }, this), suggestions.map(suggestion => {\n                  const style = {\n                    backgroundColor: suggestion.active ? '#e2e2e2' : '#fff'\n                  };\n                  return /*#__PURE__*/_createElement(\"div\", {\n                    ...getSuggestionItemProps(suggestion, {\n                      style\n                    }),\n                    key: suggestion.placeId,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 34,\n                      columnNumber: 23\n                    }\n                  }, suggestion.description);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["PlacesAutocomplete","Form","jsxDEV","_jsxDEV","createElement","_createElement","Fragment","_Fragment","Search","_ref","handleAddressChange","handleAddressSelect","address","console","log","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onSelect","searchOptions","types","componentRestrictions","country","_ref2","getInputProps","suggestions","getSuggestionItemProps","loading","Control","placeholder","size","style","width","map","suggestion","backgroundColor","active","key","placeId","__self","__source","description","_c","$RefreshReg$"],"sources":["/Users/tabo/Development/code/phase-2/phase-2-Project/Find-a-Supercharger-Frontend/src/components/search.jsx"],"sourcesContent":["import PlacesAutocomplete from 'react-places-autocomplete';\nimport Form from 'react-bootstrap/Form';\n\nexport default function Search({ handleAddressChange, handleAddressSelect, address }) {\n\n  console.log(address);\n  return (\n    <>\n      <Form.Group controlId=\"addressCityStateZip\">\n        <Form.Label>Address</Form.Label>\n        <div>\n          <PlacesAutocomplete\n            value={address}\n            onChange={handleAddressChange}\n            onSelect={handleAddressSelect}\n            searchOptions={{ types: ['address'], componentRestrictions: { country: 'us' } }}\n          >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n              <div>\n                <Form.Control\n                  {...getInputProps({\n                    placeholder: 'Address',\n                    size: 'sm',\n                  })}\n                  style={{ width: '50%' }}\n                />\n                <div>\n                  {loading && <div>Loading...</div>}\n                  {suggestions.map((suggestion) => {\n                    const style = {\n                      backgroundColor: suggestion.active ? '#e2e2e2' : '#fff',\n                    };\n                    return (\n                      <div\n                        {...getSuggestionItemProps(suggestion, { style })}\n                        key={suggestion.placeId}\n                      >\n                        {suggestion.description}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </PlacesAutocomplete>\n        </div>\n      </Form.Group>\n    </>\n  );\n}\n"],"mappings":";AAAA,OAAOA,kBAAkB,MAAM,2BAA2B;AAC1D,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,aAAA,IAAAC,cAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAwD;EAAA,IAAvD;IAAEC,mBAAmB;IAAEC,mBAAmB;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EAElFI,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB,oBACET,OAAA,CAAAI,SAAA;IAAAQ,QAAA,eACEZ,OAAA,CAACF,IAAI,CAACe,KAAK;MAACC,SAAS,EAAC,qBAAqB;MAAAF,QAAA,gBACzCZ,OAAA,CAACF,IAAI,CAACiB,KAAK;QAAAH,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAChCnB,OAAA;QAAAY,QAAA,eACEZ,OAAA,CAACH,kBAAkB;UACjBuB,KAAK,EAAEX,OAAQ;UACfY,QAAQ,EAAEd,mBAAoB;UAC9Be,QAAQ,EAAEd,mBAAoB;UAC9Be,aAAa,EAAE;YAAEC,KAAK,EAAE,CAAC,SAAS,CAAC;YAAEC,qBAAqB,EAAE;cAAEC,OAAO,EAAE;YAAK;UAAE,CAAE;UAAAd,QAAA,EAE/Ee,KAAA;YAAA,IAAC;cAAEC,aAAa;cAAEC,WAAW;cAAEC,sBAAsB;cAAEC;YAAQ,CAAC,GAAAJ,KAAA;YAAA,oBAC/D3B,OAAA;cAAAY,QAAA,gBACEZ,OAAA,CAACF,IAAI,CAACkC,OAAO;gBAAA,GACPJ,aAAa,CAAC;kBAChBK,WAAW,EAAE,SAAS;kBACtBC,IAAI,EAAE;gBACR,CAAC,CAAC;gBACFC,KAAK,EAAE;kBAAEC,KAAK,EAAE;gBAAM;cAAE;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,eACFnB,OAAA;gBAAAY,QAAA,GACGmB,OAAO,iBAAI/B,OAAA;kBAAAY,QAAA,EAAK;gBAAU;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,EAChCU,WAAW,CAACQ,GAAG,CAAEC,UAAU,IAAK;kBAC/B,MAAMH,KAAK,GAAG;oBACZI,eAAe,EAAED,UAAU,CAACE,MAAM,GAAG,SAAS,GAAG;kBACnD,CAAC;kBACD,oBACEtC,cAAA;oBAAA,GACM4B,sBAAsB,CAACQ,UAAU,EAAE;sBAAEH;oBAAM,CAAC,CAAC;oBACjDM,GAAG,EAAEH,UAAU,CAACI,OAAQ;oBAAAC,MAAA;oBAAAC,QAAA;sBAAA5B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA;kBAAA,GAEvBmB,UAAU,CAACO,WACT,CAAC;gBAEV,CAAC,CAAC;cAAA;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;QACP;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACiB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC,gBACb,CAAC;AAEP;AAAC2B,EAAA,GA9CuBzC,MAAM;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}