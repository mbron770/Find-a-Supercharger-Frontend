{"ast":null,"code":"var _jsxFileName = \"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/Newstation.jsx\";\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\n// const stateAbbreviations = [\n//     'AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD',\n//     'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC',\n//     'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY'\n//   ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Newstation() {\n  //   const [stationName, setStationName] = useState('');\n  //   const [address, setAddress] = useState('');\n  //   const [city, setCity] = useState('');\n  //   const [state, setState] = useState('');\n  //   const [pricing, setPricing] = useState('');\n  //   const [review, setReview] = useState([]);\n  //   const [chargerType, setChargerType] = useState('');\n  //   const [lat,setLat] = useState(0)\n  //   const [lng,setLng] = useState(0)\n  //   const [accessDaysTime,setAccessDayTime] = useState('')\n  //   const [zip,setZip] = useState('')\n\n  //   function handleAddressChange (selectedAddress) {\n  //     setAddress(selectedAddress);\n  //   };\n\n  //   const handleAddressSelect = async (selectedAddress) => {\n  //     setAddress(selectedAddress);\n\n  //     try {\n  //         const results = await geocodeByAddress(selectedAddress);\n  //         const selectedLocation = await getLatLng(results[0]);\n  //         const { lat, lng } = selectedLocation;\n  //         console.log(`Latitude: ${lat}, Longitude: ${lng}`);\n  //         //console.log (selectedAddress)\n  //         setLat(lat)\n  //         setLng(lng)\n  //         const addressArr = selectedAddress.split(', ')\n  //         // console.log (addressArr[addressArr.length-2])\n  //         // console.log (addressArr[addressArr.length-3])\n  //         setCity (addressArr[addressArr.length-3])\n  //         setState (addressArr[addressArr.length-2])\n\n  //         } catch (error) {\n  //             console.log('Error:', error);\n  //         }\n  //     };\n\n  //     function handleSubmit (event) {\n  //         event.preventDefault();\n\n  //         const newStation = {\n  //             \"access_days_time\": accessDaysTime,\n  //             \"station_name\": stationName,\n  //             \"station_phone\": \"877-798-3752\",\n  //             \"latitude\": lat,\n  //             \"longitude\": lng,\n  //             \"city\": city,\n  //             \"state\": state,\n  //             \"street_address\": address.split(',')[0],\n  //             \"country\": 'US',\n  //             \"zip\": zip,\n  //             \"comments\": review\n  //         }\n\n  //         fetch ('http://localhost:3000/fuel_stations', {\n  //             method: \"POST\",\n  //             headers: {\n  //                 \"Content-type\": \"application/json\",\n  //                 \"Accept\": \"application/json\"\n  //             },\n  //             body: JSON.stringify(newStation)\n  //         })\n  //         .then (response => response.json())\n  //         .then (data => {\n  //             console.log (newStation)\n  //             setStationName('');\n  //             setAddress('');\n  //             setCity('');\n  //             setState('');\n  //             setPricing('');\n  //             setReview('');\n  //             setChargerType('');\n  //             setAccessDayTime('')\n  //             setZip('')\n  //         })\n  //     };\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <h2>Add New Station</h2>\n    //     <Form onSubmit={handleSubmit}>\n    //     <Form.Group controlId=\"stationName\">\n    //         <Form.Label>Station Name</Form.Label>\n    //         <Form.Control\n    //         type=\"text\"\n    //         size=\"sm\"\n    //         value={stationName}\n    //         onChange={(e) => setStationName(e.target.value)}\n    //         style={{ width: '50%' }}\n    //         />\n    //     </Form.Group>\n    //     <Form.Group controlId=\"addressCityStateZip\">\n    //         <Form.Label>Address, City, State</Form.Label>\n    //         <div>\n    //             <div>\n    //             <PlacesAutocomplete\n    //                 value={address}\n    //                 onChange={handleAddressChange}\n    //                 onSelect={handleAddressSelect}\n    //             >\n    //                 {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n    //                 <div>\n    //                     <Form.Control\n    //                     {...getInputProps({\n    //                         placeholder: 'Address',\n    //                         size: 'sm',\n    //                     })}\n    //                     style={{ width: '50%' }}\n    //                     />\n    //                     <div>\n    //                     {loading && <div>Loading...</div>}\n    //                     {suggestions.map((suggestion) => {\n    //                         const style = {\n    //                         backgroundColor: suggestion.active ? '#e2e2e2' : '#fff',\n    //                         };\n    //                         return (\n    //                         <div\n    //                             {...getSuggestionItemProps(suggestion, { style })}\n    //                             key={suggestion.placeId}\n    //                         >\n    //                             {suggestion.description}\n    //                         </div>\n    //                         );\n    //                     })}\n    //                     </div>\n    //                 </div>\n    //                 )}\n    //             </PlacesAutocomplete>\n    //             </div>\n    //                 <div style={{ display: 'flex', marginTop: '10px' }}>\n    //                     <div style={{ flex: 1, marginRight: '5px' }}>\n    //                         <Form.Control\n    //                             type=\"text\"\n    //                             size=\"sm\"\n    //                             placeholder=\"City\"\n    //                             value={city}\n    //                             onChange={(e) => setCity(e.target.value)}\n    //                             style={{ width: '50%' }}\n    //                         />\n    //                     </div>\n    //                     <div style={{ flex: 1, marginRight: '5px' }}>\n    //                         <Form.Control\n    //                             type=\"text\"\n    //                             size=\"sm\"\n    //                             placeholder=\"Zip\"\n    //                             value={zip}\n    //                             onChange={(e) => setZip(e.target.value)}\n    //                             style={{ width: '20%' }}\n    //                         />\n    //                     </div>\n    //                     <div style={{ flex: 1, marginLeft: '5px' }}>\n    //                         <Form.Control\n    //                             as=\"select\"\n    //                             size=\"sm\"\n    //                             value={state}\n    //                             onChange={(e) => setState(e.target.value)}\n    //                             style={{ width: '25%' }}\n    //                         >\n    //                             <option value=\"\">State</option>\n    //                             {stateAbbreviations.map((state) => (\n    //                                 <option value={state} key={state}>\n    //                                 {state}\n    //                                 </option>\n    //                             ))}\n    //                         </Form.Control>\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </Form.Group>\n    //     <Form.Group controlId=\"pricing\">\n    //         <Form.Label>Pricing</Form.Label>\n    //         <Form.Control\n    //             type=\"text\"\n    //             size=\"sm\"\n    //             value={pricing}\n    //             onChange={(e) => setPricing(e.target.value)}\n    //             style={{ width: '50%' }}\n    //         />\n    //     </Form.Group>\n    //     <Form.Group controlId=\"accessdaytime\">\n    //         <Form.Label>Access Houres</Form.Label>\n    //         <Form.Control\n    //             type=\"text\"\n    //             size=\"sm\"\n    //             value={accessDaysTime}\n    //             onChange={(e) => setAccessDayTime(e.target.value)}\n    //             style={{ width: '50%' }}\n    //         />\n    //     </Form.Group>\n    //     <Form.Group controlId=\"chargerType\">\n    //         <Form.Label>Charger Type</Form.Label>\n    //         <Form.Control\n    //             type=\"text\"\n    //             size=\"sm\"\n    //             value={chargerType}\n    //             onChange={(e) => setChargerType(e.target.value)}\n    //             style={{ width: '50%' }}\n    //         />\n    //     </Form.Group>\n    //     <Form.Group controlId=\"review\">\n    //         <Form.Label>Review/Comment</Form.Label>\n    //         <Form.Control\n    //             as=\"textarea\"\n    //             rows={3}\n    //             size=\"sm\"\n    //             value={review}\n    //             onChange={(e) => setReview([e.target.value])}\n    //             style={{ width: '50%' }}\n    //         />\n    //     </Form.Group>\n    //     <Button variant=\"primary\" type=\"submit\">\n    //         Submit\n    //     </Button>\n    // </Form>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"tcl-video-container\",\n      style: {\n        position: \"fixed\",\n        top: \"var(--navbar-height)\",\n        left: 0,\n        width: \"100%\",\n        height: `calc(100% - var(--navbar-height))`,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"tcl-asset tcl-video__asset lozad tcl-objectfit-position tcl-objectfit-position--center visible-no-fade-in\",\n        preload: \"auto\",\n        playsInline: true,\n        \"data-autoplay-desktop\": true,\n        \"data-autoplay-portrait\": true,\n        \"data-autoplay-mobile\": true,\n        \"data-play-on-hover\": false,\n        muted: true,\n        loop: true,\n        controls: false,\n        \"data-src-desktop\": \"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Desktop-NA.mp4\",\n        \"data-src-portrait\": \"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Desktop-NA.mp4\",\n        \"data-src-mobile\": \"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Mobile-NA.mp4\",\n        \"data-src\": \"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Desktop-NA.mp4\",\n        \"data-object-fit\": true,\n        src: \"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Desktop-NA.mp4\",\n        \"data-loaded\": true,\n        autoPlay: true,\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"noscript\", {\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"tcl-asset tcl-video__asset lozad tcl-objectfit-position tcl-objectfit-position--center\",\n          preload: \"auto\",\n          playsInline: true,\n          \"data-autoplay-desktop\": true,\n          \"data-autoplay-portrait\": true,\n          \"data-autoplay-mobile\": true,\n          \"data-play-on-hover\": false,\n          muted: true,\n          loop: true,\n          controls: false,\n          src: \"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Desktop-NA.mp4\",\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\",\n        style: {\n          position: \"absolute\",\n          top: \"8%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          color: 'white'\n        },\n        children: \"Add a Charging Station\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\",\n        style: {\n          position: \"absolute\",\n          top: \"65%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          color: 'white',\n          fontSize: 24\n        },\n        children: \"15 min\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\",\n        style: {\n          position: \"absolute\",\n          top: \"67%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          color: 'white',\n          fontSize: 12\n        },\n        children: \"for a 200 mile charge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\",\n        style: {\n          position: \"absolute\",\n          top: \"65%\",\n          left: \"40%\",\n          transform: \"translate(-50%, -50%)\",\n          color: 'white',\n          fontSize: 24\n        },\n        children: \"1800+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\",\n        style: {\n          position: \"absolute\",\n          top: \"67%\",\n          left: \"40%\",\n          transform: \"translate(-50%, -50%)\",\n          color: 'white',\n          fontSize: 12\n        },\n        children: \"US Charging Stations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\",\n        style: {\n          position: \"absolute\",\n          top: \"%\",\n          left: \"60%\",\n          transform: \"translate(-50%, -50%)\",\n          color: 'white',\n          fontSize: 24\n        },\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\",\n        style: {\n          position: \"absolute\",\n          top: \"72%\",\n          left: \"60%\",\n          transform: \"translate(-50%, -50%)\",\n          color: 'white',\n          fontSize: 12\n        },\n        children: \"less than gasoline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 1\n    }, this)\n  );\n}\n_c = Newstation;\nexport default Newstation;\nvar _c;\n$RefreshReg$(_c, \"Newstation\");","map":{"version":3,"names":["React","useState","Form","Button","PlacesAutocomplete","geocodeByAddress","getLatLng","jsxDEV","_jsxDEV","Newstation","className","style","position","top","left","width","height","display","justifyContent","alignItems","overflow","children","preload","playsInline","muted","loop","controls","src","autoPlay","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","transform","color","fontSize","_c","$RefreshReg$"],"sources":["/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/Newstation.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\n// const stateAbbreviations = [\n//     'AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD',\n//     'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC',\n//     'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY'\n//   ];\n\nfunction Newstation() {\n  //   const [stationName, setStationName] = useState('');\n  //   const [address, setAddress] = useState('');\n  //   const [city, setCity] = useState('');\n  //   const [state, setState] = useState('');\n  //   const [pricing, setPricing] = useState('');\n  //   const [review, setReview] = useState([]);\n  //   const [chargerType, setChargerType] = useState('');\n  //   const [lat,setLat] = useState(0)\n  //   const [lng,setLng] = useState(0)\n  //   const [accessDaysTime,setAccessDayTime] = useState('')\n  //   const [zip,setZip] = useState('')\n\n  //   function handleAddressChange (selectedAddress) {\n  //     setAddress(selectedAddress);\n  //   };\n\n  //   const handleAddressSelect = async (selectedAddress) => {\n  //     setAddress(selectedAddress);\n\n  //     try {\n  //         const results = await geocodeByAddress(selectedAddress);\n  //         const selectedLocation = await getLatLng(results[0]);\n  //         const { lat, lng } = selectedLocation;\n  //         console.log(`Latitude: ${lat}, Longitude: ${lng}`);\n  //         //console.log (selectedAddress)\n  //         setLat(lat)\n  //         setLng(lng)\n  //         const addressArr = selectedAddress.split(', ')\n  //         // console.log (addressArr[addressArr.length-2])\n  //         // console.log (addressArr[addressArr.length-3])\n  //         setCity (addressArr[addressArr.length-3])\n  //         setState (addressArr[addressArr.length-2])\n\n  //         } catch (error) {\n  //             console.log('Error:', error);\n  //         }\n  //     };\n\n  //     function handleSubmit (event) {\n  //         event.preventDefault();\n\n  //         const newStation = {\n  //             \"access_days_time\": accessDaysTime,\n  //             \"station_name\": stationName,\n  //             \"station_phone\": \"877-798-3752\",\n  //             \"latitude\": lat,\n  //             \"longitude\": lng,\n  //             \"city\": city,\n  //             \"state\": state,\n  //             \"street_address\": address.split(',')[0],\n  //             \"country\": 'US',\n  //             \"zip\": zip,\n  //             \"comments\": review\n  //         }\n\n  //         fetch ('http://localhost:3000/fuel_stations', {\n  //             method: \"POST\",\n  //             headers: {\n  //                 \"Content-type\": \"application/json\",\n  //                 \"Accept\": \"application/json\"\n  //             },\n  //             body: JSON.stringify(newStation)\n  //         })\n  //         .then (response => response.json())\n  //         .then (data => {\n  //             console.log (newStation)\n  //             setStationName('');\n  //             setAddress('');\n  //             setCity('');\n  //             setState('');\n  //             setPricing('');\n  //             setReview('');\n  //             setChargerType('');\n  //             setAccessDayTime('')\n  //             setZip('')\n  //         })\n  //     };\n\n  return (\n    // <div>\n    //     <h2>Add New Station</h2>\n    //     <Form onSubmit={handleSubmit}>\n    //     <Form.Group controlId=\"stationName\">\n    //         <Form.Label>Station Name</Form.Label>\n    //         <Form.Control\n    //         type=\"text\"\n    //         size=\"sm\"\n    //         value={stationName}\n    //         onChange={(e) => setStationName(e.target.value)}\n    //         style={{ width: '50%' }}\n    //         />\n    //     </Form.Group>\n\n    //     <Form.Group controlId=\"addressCityStateZip\">\n    //         <Form.Label>Address, City, State</Form.Label>\n    //         <div>\n    //             <div>\n    //             <PlacesAutocomplete\n    //                 value={address}\n    //                 onChange={handleAddressChange}\n    //                 onSelect={handleAddressSelect}\n    //             >\n    //                 {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n    //                 <div>\n    //                     <Form.Control\n    //                     {...getInputProps({\n    //                         placeholder: 'Address',\n    //                         size: 'sm',\n    //                     })}\n    //                     style={{ width: '50%' }}\n    //                     />\n    //                     <div>\n    //                     {loading && <div>Loading...</div>}\n    //                     {suggestions.map((suggestion) => {\n    //                         const style = {\n    //                         backgroundColor: suggestion.active ? '#e2e2e2' : '#fff',\n    //                         };\n    //                         return (\n    //                         <div\n    //                             {...getSuggestionItemProps(suggestion, { style })}\n    //                             key={suggestion.placeId}\n    //                         >\n    //                             {suggestion.description}\n    //                         </div>\n    //                         );\n    //                     })}\n    //                     </div>\n    //                 </div>\n    //                 )}\n    //             </PlacesAutocomplete>\n    //             </div>\n    //                 <div style={{ display: 'flex', marginTop: '10px' }}>\n    //                     <div style={{ flex: 1, marginRight: '5px' }}>\n    //                         <Form.Control\n    //                             type=\"text\"\n    //                             size=\"sm\"\n    //                             placeholder=\"City\"\n    //                             value={city}\n    //                             onChange={(e) => setCity(e.target.value)}\n    //                             style={{ width: '50%' }}\n    //                         />\n    //                     </div>\n    //                     <div style={{ flex: 1, marginRight: '5px' }}>\n    //                         <Form.Control\n    //                             type=\"text\"\n    //                             size=\"sm\"\n    //                             placeholder=\"Zip\"\n    //                             value={zip}\n    //                             onChange={(e) => setZip(e.target.value)}\n    //                             style={{ width: '20%' }}\n    //                         />\n    //                     </div>\n    //                     <div style={{ flex: 1, marginLeft: '5px' }}>\n    //                         <Form.Control\n    //                             as=\"select\"\n    //                             size=\"sm\"\n    //                             value={state}\n    //                             onChange={(e) => setState(e.target.value)}\n    //                             style={{ width: '25%' }}\n    //                         >\n    //                             <option value=\"\">State</option>\n    //                             {stateAbbreviations.map((state) => (\n    //                                 <option value={state} key={state}>\n    //                                 {state}\n    //                                 </option>\n    //                             ))}\n    //                         </Form.Control>\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </Form.Group>\n\n    //     <Form.Group controlId=\"pricing\">\n    //         <Form.Label>Pricing</Form.Label>\n    //         <Form.Control\n    //             type=\"text\"\n    //             size=\"sm\"\n    //             value={pricing}\n    //             onChange={(e) => setPricing(e.target.value)}\n    //             style={{ width: '50%' }}\n    //         />\n    //     </Form.Group>\n\n    //     <Form.Group controlId=\"accessdaytime\">\n    //         <Form.Label>Access Houres</Form.Label>\n    //         <Form.Control\n    //             type=\"text\"\n    //             size=\"sm\"\n    //             value={accessDaysTime}\n    //             onChange={(e) => setAccessDayTime(e.target.value)}\n    //             style={{ width: '50%' }}\n    //         />\n    //     </Form.Group>\n\n    //     <Form.Group controlId=\"chargerType\">\n    //         <Form.Label>Charger Type</Form.Label>\n    //         <Form.Control\n    //             type=\"text\"\n    //             size=\"sm\"\n    //             value={chargerType}\n    //             onChange={(e) => setChargerType(e.target.value)}\n    //             style={{ width: '50%' }}\n    //         />\n    //     </Form.Group>\n\n    //     <Form.Group controlId=\"review\">\n    //         <Form.Label>Review/Comment</Form.Label>\n    //         <Form.Control\n    //             as=\"textarea\"\n    //             rows={3}\n    //             size=\"sm\"\n    //             value={review}\n    //             onChange={(e) => setReview([e.target.value])}\n    //             style={{ width: '50%' }}\n    //         />\n    //     </Form.Group>\n\n    //     <Button variant=\"primary\" type=\"submit\">\n    //         Submit\n    //     </Button>\n    // </Form>\n    // </div>\n\n<div\n  className=\"tcl-video-container\"\n  style={{\n    position: \"fixed\",\n    top: \"var(--navbar-height)\",\n    left: 0,\n    width: \"100%\",\n    height: `calc(100% - var(--navbar-height))`,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  }}\n>\n  <video\n    className=\"tcl-asset tcl-video__asset lozad tcl-objectfit-position tcl-objectfit-position--center visible-no-fade-in\"\n    preload=\"auto\"\n    playsInline\n    data-autoplay-desktop={true}\n    data-autoplay-portrait={true}\n    data-autoplay-mobile={true}\n    data-play-on-hover={false}\n    muted\n    loop\n    controls={false}\n    data-src-desktop=\"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Desktop-NA.mp4\"\n    data-src-portrait=\"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Desktop-NA.mp4\"\n    data-src-mobile=\"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Mobile-NA.mp4\"\n    data-src=\"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Desktop-NA.mp4\"\n    data-object-fit={true}\n    src=\"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Desktop-NA.mp4\"\n    data-loaded={true}\n    autoPlay={true}\n    style={{\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\"\n    }}\n  ></video>\n  <noscript>\n    <video\n      className=\"tcl-asset tcl-video__asset lozad tcl-objectfit-position tcl-objectfit-position--center\"\n      preload=\"auto\"\n      playsInline\n      data-autoplay-desktop={true}\n      data-autoplay-portrait={true}\n      data-autoplay-mobile={true}\n      data-play-on-hover={false}\n      muted\n      loop\n      controls={false}\n      src=\"https://digitalassets.tesla.com/tesla-contents/video/upload/f_auto,q_auto:best/Supercharger-Main-Hero-Desktop-NA.mp4\"\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\"\n      }}\n    ></video>\n  </noscript>\n  <h1\n    className=\"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\"\n    style={{\n      position: \"absolute\",\n      top: \"8%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      color: 'white',\n    }}\n  >\n    Add a Charging Station\n  </h1>\n  <h1\n    className=\"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\"\n    style={{\n      position: \"absolute\",\n      top: \"65%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      color: 'white',\n      fontSize: 24\n    }}\n  >\n    15 min\n  </h1>\n  <h1\n    className=\"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\"\n    style={{\n      position: \"absolute\",\n      top: \"67%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      color: 'white',\n      fontSize: 12\n    }}\n  >\n    for a 200 mile charge\n  </h1>\n  \n  <h1\n    className=\"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\"\n    style={{\n      position: \"absolute\",\n      top: \"65%\",\n      left: \"40%\",\n      transform: \"translate(-50%, -50%)\",\n      color: 'white',\n      fontSize: 24\n    }}\n  >\n    1800+\n  </h1>\n  <h1\n    className=\"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\"\n    style={{\n      position: \"absolute\",\n      top: \"67%\",\n      left: \"40%\",\n      transform: \"translate(-50%, -50%)\",\n      color: 'white',\n      fontSize: 12\n    }}\n  >\n   US Charging Stations\n  </h1>\n  <h1\n    className=\"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\"\n    style={{\n      position: \"absolute\",\n      top: \"%\",\n      left: \"60%\",\n      transform: \"translate(-50%, -50%)\",\n      color: 'white',\n      fontSize: 24\n    }}\n  >\n    $\n  </h1>\n  <h1\n    className=\"tcl-hero__heading tds-colorscheme--dark tds-animate_small--to_reveal\"\n    style={{\n      position: \"absolute\",\n      top: \"72%\",\n      left: \"60%\",\n      transform: \"translate(-50%, -50%)\",\n      color: 'white',\n      fontSize: 12\n    }}\n  >\n    less than gasoline\n  </h1>\n  \n</div>\n\n\n\n  );\n}\n\nexport default Newstation;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,kBAAkB,IACvBC,gBAAgB,EAChBC,SAAS,QACJ,2BAA2B;;AAElC;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,UAAUA,CAAA,EAAG;EACpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}