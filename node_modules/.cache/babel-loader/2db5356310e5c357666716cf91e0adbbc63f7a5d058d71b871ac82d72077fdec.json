{"ast":null,"code":"var _jsxFileName = \"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, Marker, InfoWindowF } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL = 'http://localhost:3000/fuel_stations';\nfunction Map(_ref) {\n  _s();\n  let {\n    stations\n  } = _ref;\n  const containerStyle = {\n    width: \"100vw\",\n    height: \"100vh\"\n  };\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [selectedStation, setSelectedStation] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [centerAt, setCenterAt] = useState(currentLocation);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentLocation({\n          lat: latitude,\n          lng: longitude\n        });\n        setCenterAt(cur);\n      }, error => {\n        console.error(\"Error getting current location:\", error);\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  function handleSelectedStation(station) {\n    setSelectedStation(station);\n  }\n  function handleCloseInfoWindow() {\n    setSelectedStation(null);\n  }\n  function handleDirectionsResponse(response, status) {\n    if (status === \"OK\") {\n      const leg = response.routes[0].legs[0];\n      setDistance(leg.distance.text);\n      setDuration(leg.duration.text);\n    } else {\n      console.error(\"Directions request failed:\", status);\n      setDistance(null);\n      setDuration(null);\n    }\n  }\n  function handleGetDirections() {\n    if (currentLocation && selectedStation) {\n      const origin = `${currentLocation.lat},${currentLocation.lng}`;\n      const destination = `${selectedStation.latitude},${selectedStation.longitude}`;\n      const directionsUrl = `https://www.google.com/maps/dir/?api=1&origin=${origin}&destination=${destination}`;\n      window.open(directionsUrl, \"_blank\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentLocation && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: centerAt,\n      zoom: 13,\n      children: [currentLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: currentLocation,\n        title: \"Current Location\",\n        icon: {\n          url: \"https://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), stations.map(station => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: station.latitude,\n          lng: station.longitude\n        },\n        title: station.station_name,\n        onClick: () => handleSelectedStation(station)\n      }, station.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)), selectedStation && /*#__PURE__*/_jsxDEV(InfoWindowF, {\n        position: {\n          lat: selectedStation.latitude,\n          lng: selectedStation.longitude\n        },\n        onCloseClick: handleCloseInfoWindow,\n        visible: selectedStation !== null,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"City: \", selectedStation.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Station Name: \", selectedStation.station_name.split(\" - Tesla Supercharger\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Address: \", selectedStation.street_address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Phone: \", selectedStation.station_phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), distance && duration && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Distance: \", distance, \" | Duration: \", duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGetDirections,\n            children: \"Get Directions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Map, \"V9hl7o2XQt4UnQbJMSuyTiccw8A=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","Marker","InfoWindowF","jsxDEV","_jsxDEV","Fragment","_Fragment","URL","Map","_ref","_s","stations","containerStyle","width","height","currentLocation","setCurrentLocation","selectedStation","setSelectedStation","distance","setDistance","duration","setDuration","centerAt","setCenterAt","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","cur","error","console","handleSelectedStation","station","handleCloseInfoWindow","handleDirectionsResponse","response","status","leg","routes","legs","text","handleGetDirections","origin","destination","directionsUrl","window","open","children","mapContainerStyle","center","zoom","title","icon","url","fileName","_jsxFileName","lineNumber","columnNumber","map","station_name","onClick","id","onCloseClick","visible","city","split","street_address","station_phone","_c","$RefreshReg$"],"sources":["/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/map.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, Marker, InfoWindowF } from \"@react-google-maps/api\";\n\n\nconst URL = 'http://localhost:3000/fuel_stations';\n\nfunction Map({stations}) {\n  const containerStyle = {\n    width: \"100vw\",\n    height: \"100vh\",\n  };\n\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [selectedStation, setSelectedStation] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [centerAt, setCenterAt] = useState(currentLocation);\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setCurrentLocation({ lat: latitude, lng: longitude });\n          setCenterAt(cur)\n        },\n        (error) => {\n          console.error(\"Error getting current location:\", error);\n        }\n      );\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n\n  function handleSelectedStation(station) {\n    setSelectedStation(station);\n  }\n\n  function handleCloseInfoWindow() {\n    setSelectedStation(null);\n  }\n\n  function handleDirectionsResponse(response, status) {\n    if (status === \"OK\") {\n      const leg = response.routes[0].legs[0];\n      setDistance(leg.distance.text);\n      setDuration(leg.duration.text);\n    } else {\n      console.error(\"Directions request failed:\", status);\n      setDistance(null);\n      setDuration(null);\n    }\n  }\n\n  function handleGetDirections() {\n    if (currentLocation && selectedStation) {\n      const origin = `${currentLocation.lat},${currentLocation.lng}`;\n      const destination = `${selectedStation.latitude},${selectedStation.longitude}`;\n      const directionsUrl = `https://www.google.com/maps/dir/?api=1&origin=${origin}&destination=${destination}`;\n      window.open(directionsUrl, \"_blank\");\n    }\n  }\n\n  return (\n    <>\n    {currentLocation && (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={centerAt}\n      zoom={13}\n    >\n      {currentLocation && (\n        <Marker\n          position={currentLocation}\n          title=\"Current Location\"\n          icon={{\n            url: \"https://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n          }}\n        />\n      )}\n      {stations.map(station => (\n        <Marker\n          key={station.id}\n          position={{ lat: station.latitude, lng: station.longitude }}\n          title={station.station_name}\n          onClick={() => handleSelectedStation(station)}\n        />\n      ))}\n      {selectedStation && (\n        <InfoWindowF\n          position={{\n            lat: selectedStation.latitude,\n            lng: selectedStation.longitude,\n          }}\n          onCloseClick={handleCloseInfoWindow}\n          visible={selectedStation !== null}\n        >\n          <div>\n            <h3>City: {selectedStation.city}</h3>\n            <p>Station Name: {selectedStation.station_name.split(\" - Tesla Supercharger\")}</p>\n            <p>Address: {selectedStation.street_address}</p>\n            <p>Phone: {selectedStation.station_phone}</p>\n            {distance && duration && (\n              <p>\n                Distance: {distance} | Duration: {duration}\n              </p>\n            )}\n            <button onClick={handleGetDirections}>Get Directions</button>\n          </div>\n        </InfoWindowF>\n      )}\n    </GoogleMap>\n    )}\n    </>\n    \n  );\n}\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}