{"ast":null,"code":"var _jsxFileName = \"/Users/tabo/Development/code/phase-2/phase-2-Project/Find-a-Supercharger-Frontend/src/components/map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleMap, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'http://localhost:3000/fuel_stations';\nconst API_KEY = 'IzaSyDn7oQa4QsdEXc9GoIv5as8gMS8_uF73_4';\nfunction Map() {\n  _s();\n  const containerStyle = {\n    width: \"100%\",\n    height: \"650px\"\n  };\n  const [stations, setStations] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [selectedStation, setSelectedStation] = useState(null);\n  const [isInfoWindowOpen, setIsInfoWindowOpen] = useState(false);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  useEffect(() => {\n    fetch(URL).then(response => response.json()).then(data => setStations(data));\n  }, []);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentLocation({\n          lat: latitude,\n          lng: longitude\n        });\n      }, error => {\n        console.error(\"Error getting current location:\", error);\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    if (selectedStation && currentLocation) {\n      const directionsService = new window.google.maps.DirectionsService();\n      const request = {\n        origin: currentLocation,\n        destination: {\n          lat: selectedStation.latitude,\n          lng: selectedStation.longitude\n        },\n        travelMode: \"DRIVING\",\n        drivingOptions: {\n          departureTime: new Date()\n        }\n      };\n      directionsService.route(request, handleDirectionsResponse);\n    }\n  }, [selectedStation, currentLocation]);\n  function handleSelectedStation(station) {\n    setSelectedStation(station);\n    setIsInfoWindowOpen(true);\n  }\n  function handleCloseInfoWindow() {\n    setSelectedStation(null);\n    setIsInfoWindowOpen(false);\n  }\n  function handleDirectionsResponse(response, status) {\n    if (status === \"OK\") {\n      const leg = response.routes[0].legs[0];\n      setDistance(leg.distance.text);\n      setDuration(leg.duration.text);\n    } else {\n      console.error(\"Directions request failed:\", status);\n      setDistance(null);\n      setDuration(null);\n    }\n  }\n  function handleGetDirections() {\n    if (currentLocation && selectedStation) {\n      const origin = `${currentLocation.lat},${currentLocation.lng}`;\n      const destination = `${selectedStation.latitude},${selectedStation.longitude}`;\n      const directionsUrl = `https://www.google.com/maps/dir/?api=1&origin=${origin}&destination=${destination}`;\n      window.open(directionsUrl, \"_blank\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: currentLocation,\n    zoom: 13,\n    children: [currentLocation && /*#__PURE__*/_jsxDEV(Marker, {\n      position: currentLocation,\n      title: \"Current Location\",\n      icon: {\n        url: \"https://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), stations.map(station => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: station.latitude,\n        lng: station.longitude\n      },\n      title: station.station_name,\n      onClick: () => handleSelectedStation(station)\n    }, station.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)), isInfoWindowOpen && selectedStation && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selectedStation.latitude,\n        lng: selectedStation.longitude\n      },\n      onCloseClick: handleCloseInfoWindow,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"City: \", selectedStation.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Station Name: \", selectedStation.station_name.split(\" - Tesla Supercharger\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", selectedStation.street_address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", selectedStation.station_phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), distance && duration && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Distance: \", distance, \" | Duration: \", duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGetDirections,\n          children: \"Get Directions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"XxaQQEAJ62OVXbOzxgiFW8TLIbk=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","Marker","InfoWindow","jsxDEV","_jsxDEV","URL","API_KEY","Map","_s","containerStyle","width","height","stations","setStations","currentLocation","setCurrentLocation","selectedStation","setSelectedStation","isInfoWindowOpen","setIsInfoWindowOpen","distance","setDistance","duration","setDuration","fetch","then","response","json","data","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","error","console","directionsService","window","google","maps","DirectionsService","request","origin","destination","travelMode","drivingOptions","departureTime","Date","route","handleDirectionsResponse","handleSelectedStation","station","handleCloseInfoWindow","status","leg","routes","legs","text","handleGetDirections","directionsUrl","open","mapContainerStyle","center","zoom","children","title","icon","url","fileName","_jsxFileName","lineNumber","columnNumber","map","station_name","onClick","id","onCloseClick","city","split","street_address","station_phone","_c","$RefreshReg$"],"sources":["/Users/tabo/Development/code/phase-2/phase-2-Project/Find-a-Supercharger-Frontend/src/components/map.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GoogleMap, Marker, InfoWindow } from \"@react-google-maps/api\";\n\nconst URL = 'http://localhost:3000/fuel_stations';\nconst API_KEY = 'IzaSyDn7oQa4QsdEXc9GoIv5as8gMS8_uF73_4';\n\nfunction Map() {\n  const containerStyle = {\n    width: \"100%\",\n    height: \"650px\",\n  };\n\n  const [stations, setStations] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [selectedStation, setSelectedStation] = useState(null);\n  const [isInfoWindowOpen, setIsInfoWindowOpen] = useState(false);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n\n  useEffect(() => {\n    fetch(URL)\n      .then(response => response.json())\n      .then(data => setStations(data));\n  }, []);\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setCurrentLocation({ lat: latitude, lng: longitude });\n        },\n        (error) => {\n          console.error(\"Error getting current location:\", error);\n        }\n      );\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n  useEffect(() => {\n    if (selectedStation && currentLocation) {\n      const directionsService = new window.google.maps.DirectionsService();\n      const request = {\n        origin: currentLocation,\n        destination: {\n          lat: selectedStation.latitude,\n          lng: selectedStation.longitude,\n        },\n        travelMode: \"DRIVING\",\n        drivingOptions: {\n          departureTime: new Date(),\n        },\n      };\n      directionsService.route(request, handleDirectionsResponse);\n    }\n  }, [selectedStation, currentLocation]);\n\n  function handleSelectedStation(station) {\n    setSelectedStation(station);\n    setIsInfoWindowOpen(true);\n  }\n\n  function handleCloseInfoWindow() {\n    setSelectedStation(null);\n    setIsInfoWindowOpen(false);\n  }\n\n  function handleDirectionsResponse(response, status) {\n    if (status === \"OK\") {\n      const leg = response.routes[0].legs[0];\n      setDistance(leg.distance.text);\n      setDuration(leg.duration.text);\n    } else {\n      console.error(\"Directions request failed:\", status);\n      setDistance(null);\n      setDuration(null);\n    }\n  }\n\n  function handleGetDirections() {\n    if (currentLocation && selectedStation) {\n      const origin = `${currentLocation.lat},${currentLocation.lng}`;\n      const destination = `${selectedStation.latitude},${selectedStation.longitude}`;\n      const directionsUrl = `https://www.google.com/maps/dir/?api=1&origin=${origin}&destination=${destination}`;\n      window.open(directionsUrl, \"_blank\");\n    }\n  }\n\n  return (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={currentLocation}\n      zoom={13}\n    >\n      {currentLocation && (\n        <Marker\n          position={currentLocation}\n          title=\"Current Location\"\n          icon={{\n            url: \"https://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n          }}\n        />\n      )}\n      {stations.map(station => (\n        <Marker\n          key={station.id}\n          position={{ lat: station.latitude, lng: station.longitude }}\n          title={station.station_name}\n          onClick={() => handleSelectedStation(station)}\n        />\n      ))}\n      {isInfoWindowOpen && selectedStation && (\n        <InfoWindow\n          position={{\n            lat: selectedStation.latitude,\n            lng: selectedStation.longitude,\n          }}\n          onCloseClick={handleCloseInfoWindow}\n        >\n          <div>\n            <h3>City: {selectedStation.city}</h3>\n            <p>Station Name: {selectedStation.station_name.split(\" - Tesla Supercharger\")}</p>\n            <p>Address: {selectedStation.street_address}</p>\n            <p>Phone: {selectedStation.station_phone}</p>\n            {distance && duration && (\n              <p>\n                Distance: {distance} | Duration: {duration}\n              </p>\n            )}\n            <button onClick={handleGetDirections}>Get Directions</button>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}