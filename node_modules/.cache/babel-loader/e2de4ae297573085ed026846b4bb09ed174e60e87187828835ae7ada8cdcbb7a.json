{"ast":null,"code":"var _jsxFileName = \"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/search.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search(_ref) {\n  _s();\n  let {\n    currentLocation,\n    setLat,\n    setLng,\n    address,\n    setAddress\n  } = _ref;\n  useEffect(() => {\n    if (currentLocation) {\n      setLat(currentLocation.lat);\n      setLng(currentLocation.lng);\n    }\n  }, [currentLocation]);\n  const handleAddressSelect = async selectedAddress => {\n    setAddress(selectedAddress);\n    try {\n      const results = await geocodeByAddress(selectedAddress);\n      const selectedLocation = await getLatLng(results[0]);\n      const {\n        lat,\n        lng\n      } = selectedLocation;\n      console.log(`Latitude: ${lat}, Longitude: ${lng}`);\n      setLat(lat);\n      setLng(lng);\n      const addressArr = selectedAddress.split(\", \");\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  };\n  function handleAddressChange(selectedAddress) {\n    //console.log(address,\"   parent\")\n    if (address.length === 1) {\n      //console.log (\"DONE\")\n      setLat(currentLocation.lat);\n      setLng(currentLocation.lng);\n    }\n    setAddress(prevAddr => selectedAddress);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(Search, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","useEffect","PlacesAutocomplete","geocodeByAddress","getLatLng","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","_ref","_s","currentLocation","setLat","setLng","address","setAddress","lat","lng","handleAddressSelect","selectedAddress","results","selectedLocation","console","log","addressArr","split","error","handleAddressChange","length","prevAddr","children","style","display","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/search.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function Search({\n  currentLocation,\n  setLat,\n  setLng,\n  address,\n  setAddress,\n}) {\n  useEffect(() => {\n    if (currentLocation) {\n      setLat(currentLocation.lat);\n      setLng(currentLocation.lng);\n    }\n  }, [currentLocation]);\n\n  const handleAddressSelect = async (selectedAddress) => {\n    setAddress(selectedAddress);\n\n    try {\n      const results = await geocodeByAddress(selectedAddress);\n      const selectedLocation = await getLatLng(results[0]);\n      const { lat, lng } = selectedLocation;\n      console.log(`Latitude: ${lat}, Longitude: ${lng}`);\n      setLat(lat);\n      setLng(lng);\n      const addressArr = selectedAddress.split(\", \");\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  };\n\n  function handleAddressChange(selectedAddress) {\n    //console.log(address,\"   parent\")\n    if (address.length === 1) {\n      //console.log (\"DONE\")\n      setLat(currentLocation.lat);\n      setLng(currentLocation.lng);\n    }\n    setAddress((prevAddr) => selectedAddress);\n  }\n\n  return (\n    <>\n\n<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n\n\n  </div>\n    \n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,kBAAkB,IACvBC,gBAAgB,EAChBC,SAAS,QACJ,2BAA2B;AAClC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAM3B;EAAAC,EAAA;EAAA,IAN4B;IAC7BC,eAAe;IACfC,MAAM;IACNC,MAAM;IACNC,OAAO;IACPC;EACF,CAAC,GAAAN,IAAA;EACCX,SAAS,CAAC,MAAM;IACd,IAAIa,eAAe,EAAE;MACnBC,MAAM,CAACD,eAAe,CAACK,GAAG,CAAC;MAC3BH,MAAM,CAACF,eAAe,CAACM,GAAG,CAAC;IAC7B;EACF,CAAC,EAAE,CAACN,eAAe,CAAC,CAAC;EAErB,MAAMO,mBAAmB,GAAG,MAAOC,eAAe,IAAK;IACrDJ,UAAU,CAACI,eAAe,CAAC;IAE3B,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMpB,gBAAgB,CAACmB,eAAe,CAAC;MACvD,MAAME,gBAAgB,GAAG,MAAMpB,SAAS,CAACmB,OAAO,CAAC,CAAC,CAAC,CAAC;MACpD,MAAM;QAAEJ,GAAG;QAAEC;MAAI,CAAC,GAAGI,gBAAgB;MACrCC,OAAO,CAACC,GAAG,CAAE,aAAYP,GAAI,gBAAeC,GAAI,EAAC,CAAC;MAClDL,MAAM,CAACI,GAAG,CAAC;MACXH,MAAM,CAACI,GAAG,CAAC;MACX,MAAMO,UAAU,GAAGL,eAAe,CAACM,KAAK,CAAC,IAAI,CAAC;IAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEG,KAAK,CAAC;IAC9B;EACF,CAAC;EAED,SAASC,mBAAmBA,CAACR,eAAe,EAAE;IAC5C;IACA,IAAIL,OAAO,CAACc,MAAM,KAAK,CAAC,EAAE;MACxB;MACAhB,MAAM,CAACD,eAAe,CAACK,GAAG,CAAC;MAC3BH,MAAM,CAACF,eAAe,CAACM,GAAG,CAAC;IAC7B;IACAF,UAAU,CAAEc,QAAQ,IAAKV,eAAe,CAAC;EAC3C;EAEA,oBACEd,OAAA,CAAAE,SAAA;IAAAuB,QAAA,eAEJzB,OAAA;MAAK0B,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG1F;EAAC,gBAEF,CAAC;AAEP;AAAC7B,EAAA,CAlDuBF,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}