[{"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/index.js":"1","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/reportWebVitals.js":"2","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/error.jsx":"3","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/routes/reviews.jsx":"4","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/routes/root.jsx":"5","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/routes/allchargers.jsx":"6","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/app.jsx":"7","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/nav.jsx":"8","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/map.jsx":"9","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/carddisplay.jsx":"10","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/individualcard.jsx":"11","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/Individualcard.jsx":"12"},{"size":1415,"mtime":1687877518152,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1687877412409,"results":"15","hashOfConfig":"14"},{"size":392,"mtime":1687877412408,"results":"16","hashOfConfig":"14"},{"size":139,"mtime":1687877412409,"results":"17","hashOfConfig":"14"},{"size":183,"mtime":1687877412409,"results":"18","hashOfConfig":"14"},{"size":1277,"mtime":1687877518152,"results":"19","hashOfConfig":"14"},{"size":493,"mtime":1687888196572,"results":"20","hashOfConfig":"14"},{"size":1565,"mtime":1687877412409,"results":"21","hashOfConfig":"14"},{"size":3916,"mtime":1687877518152,"results":"22","hashOfConfig":"14"},{"size":2462,"mtime":1687894288166,"results":"23","hashOfConfig":"14"},{"size":769,"mtime":1687813102057,"results":"24","hashOfConfig":"14"},{"size":9301,"mtime":1687894299867,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"bsxqy3",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/index.js",["65","66","67"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { LoadScript } from '@react-google-maps/api';\nimport Error from './error';\nimport Root from './routes/root';\nimport App from './components/app';\nimport AllChargers from './routes/allchargers';\nimport Reviews from './routes/reviews';\nimport { useState, useEffect } from 'react';\n\nconst URL = 'http://localhost:3000/fuel_stations';\n\n// const [stations, setStations] = useState([]);\n\n// useEffect(() => {\n//   fetch(URL)\n//     .then(response => response.json())\n//     .then(data => setStations(data));\n// }, []);\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <Root />,\n    errorElement: <Error />,\n    children: [\n      {\n        path: '/',\n        element: <App />,\n      },\n      {\n        path: 'allchargers',\n        element: <AllChargers />,\n      },\n      {\n        path: 'reviews',\n        element: <Reviews />,\n      },\n    ],\n  },\n]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <LoadScript googleMapsApiKey=\"AIzaSyDn7oQa4QsdEXc9GoIv5as8gMS8_uF73_4\">\n      <RouterProvider router={router} />\n    </LoadScript>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n\n",[],"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/reportWebVitals.js",[],[],"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/error.jsx",[],[],"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/routes/reviews.jsx",[],[],"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/routes/root.jsx",[],[],"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/routes/allchargers.jsx",[],[],"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/app.jsx",[],[],"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/nav.jsx",[],[],"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/map.jsx",["68"],[],"import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, Marker, InfoWindowF } from \"@react-google-maps/api\";\n\n\nconst URL = 'http://localhost:3000/fuel_stations';\n\nfunction Map({stations}) {\n  const containerStyle = {\n    width: \"100vw\",\n    height: \"96vh\",\n  };\n\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [selectedStation, setSelectedStation] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setCurrentLocation({ lat: latitude, lng: longitude });\n        },\n        (error) => {\n          console.error(\"Error getting current location:\", error);\n        }\n      );\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n  useEffect(() => {\n    if (selectedStation && currentLocation) {\n      const directionsService = new window.google.maps.DirectionsService();\n      const request = {\n        origin: currentLocation,\n        destination: {\n          lat: selectedStation.latitude,\n          lng: selectedStation.longitude,\n        },\n        travelMode: \"DRIVING\",\n        drivingOptions: {\n          departureTime: new Date(),\n        },\n      };\n      directionsService.route(request, handleDirectionsResponse);\n    }\n  }, [selectedStation, currentLocation]);\n\n  function handleSelectedStation(station) {\n    setSelectedStation(station);\n  }\n\n  function handleCloseInfoWindow() {\n    setSelectedStation(null);\n  }\n\n  function handleDirectionsResponse(response, status) {\n    if (status === \"OK\") {\n      const leg = response.routes[0].legs[0];\n      setDistance(leg.distance.text);\n      setDuration(leg.duration.text);\n    } else {\n      console.error(\"Directions request failed:\", status);\n      setDistance(null);\n      setDuration(null);\n    }\n  }\n\n  function handleGetDirections() {\n    if (currentLocation && selectedStation) {\n      const origin = `${currentLocation.lat},${currentLocation.lng}`;\n      const destination = `${selectedStation.latitude},${selectedStation.longitude}`;\n      const directionsUrl = `https://www.google.com/maps/dir/?api=1&origin=${origin}&destination=${destination}`;\n      window.open(directionsUrl, \"_blank\");\n    }\n  }\n\n  return (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={currentLocation}\n      zoom={13}\n    >\n      {currentLocation && (\n        <Marker\n          position={currentLocation}\n          title=\"Current Location\"\n          icon={{\n            url: \"https://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n          }}\n        />\n      )}\n      {stations.map(station => (\n        <Marker\n          key={station.id}\n          position={{ lat: station.latitude, lng: station.longitude }}\n          title={station.station_name}\n          onClick={() => handleSelectedStation(station)}\n        />\n      ))}\n      {selectedStation && (\n        <InfoWindowF\n          position={{\n            lat: selectedStation.latitude,\n            lng: selectedStation.longitude,\n          }}\n          onCloseClick={handleCloseInfoWindow}\n          visible={selectedStation !== null}\n        >\n          <div>\n            <h3>City: {selectedStation.city}</h3>\n            <p>Station Name: {selectedStation.station_name.split(\" - Tesla Supercharger\")}</p>\n            <p>Address: {selectedStation.street_address}</p>\n            <p>Phone: {selectedStation.station_phone}</p>\n            {distance && duration && (\n              <p>\n                Distance: {distance} | Duration: {duration}\n              </p>\n            )}\n            <button onClick={handleGetDirections}>Get Directions</button>\n          </div>\n        </InfoWindowF>\n      )}\n    </GoogleMap>\n  );\n}\n\nexport default Map;\n","/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/carddisplay.jsx",["69"],[],"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/individualcard.jsx",[],[],"/Users/mordechaibronfin/Desktop/Development/code/phase-2/phase2Project/Find-a-Supercharger-Frontend/src/components/Individualcard.jsx",["70","71","72","73","74","75"],[],{"ruleId":"76","severity":1,"message":"77","line":13,"column":10,"nodeType":"78","messageId":"79","endLine":13,"endColumn":18},{"ruleId":"76","severity":1,"message":"80","line":13,"column":20,"nodeType":"78","messageId":"79","endLine":13,"endColumn":29},{"ruleId":"76","severity":1,"message":"81","line":15,"column":7,"nodeType":"78","messageId":"79","endLine":15,"endColumn":10},{"ruleId":"76","severity":1,"message":"81","line":5,"column":7,"nodeType":"78","messageId":"79","endLine":5,"endColumn":10},{"ruleId":"76","severity":1,"message":"82","line":2,"column":16,"nodeType":"78","messageId":"79","endLine":2,"endColumn":22},{"ruleId":"76","severity":1,"message":"83","line":11,"column":29,"nodeType":"78","messageId":"79","endLine":11,"endColumn":40},{"ruleId":"76","severity":1,"message":"84","line":25,"column":27,"nodeType":"78","messageId":"79","endLine":25,"endColumn":45},{"ruleId":"76","severity":1,"message":"85","line":26,"column":10,"nodeType":"78","messageId":"79","endLine":26,"endColumn":18},{"ruleId":"76","severity":1,"message":"86","line":27,"column":10,"nodeType":"78","messageId":"79","endLine":27,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":61,"column":6,"nodeType":"89","endLine":61,"endColumn":40,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":238,"column":33,"nodeType":"93","messageId":"94","endLine":238,"endColumn":34},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'URL' is assigned a value but never used.","'uuidv4' is defined but never used.","'InfoWindowF' is defined but never used.","'setSelectedStation' is assigned a value but never used.","'distance' is assigned a value but never used.","'duration' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'stationLatitude' and 'stationLongitude'. Either include them or remove the dependency array.","ArrayExpression",["95"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",{"desc":"96","fix":"97"},"Update the dependencies array to be: [selectedStation, currentLocation, stationLatitude, stationLongitude]",{"range":"98","text":"99"},[1974,2008],"[selectedStation, currentLocation, stationLatitude, stationLongitude]"]